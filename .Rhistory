table(ext)
sort(table(ext))
file.df$newpath <- paste0(library.folder,
"/",
file.df$year,
"/",
file.df$month, "_", file.df$month.name, "_", file.df$year) # add year to sub-folders
file.df$newpath
file.df$newpath.parent <- paste0(library.folder,
"/",
file.df$year)
file.df$time <- gsub(":", "\\.", file.df$date)
file.df$time
file.df$time <- substr(file.df$timestamp,
regexpr(" ", file.df$timestamp)+1,
nchar(as.character(file.df$timestamp)))
file.df$time <- gsub(":", "\\.", file.df$time)
file.df$time
file.df$newname <- paste0(file.df$year,
"_",
file.df$month,
"_",
file.df$day,
"-",
file.df$time,
ext)
head(file.df$newname)
# remove duplicate photos (taken at the exact same second from the same device
file.df.save <- file.df
file.df <- file.df[!duplicated(paste0(file.df$newname,
"-", file.df$device)),]
file.to.go <- file.df[,c("path","newpath","newname", "newpath.parent")]
library.folder <- "/timothy/Dropbox/video_library"
# get data for exif available files ####
dat <- file.info(files)
file.df <- data.frame(path=files,
timestamp=dat$mtime,
device=dat$size)
file.df$date <- substr(file.df$timestamp,
1,
regexpr(" ", file.df$timestamp)-1)
file.df$time <- substr(file.df$timestamp,
regexpr(" ", file.df$timestamp)+1,
nchar(as.character(file.df$timestamp)))
file.df$time <- gsub(":", "\\.", file.df$time)
file.df$year <- substr(file.df$timestamp, 1, 4)
file.df$month <- as.numeric(as.character(substr(file.df$timestamp, 6, 7)))
file.df$day <- substr(file.df$timestamp, 9, 10)
has.month <- !is.na(file.df$month)
has.month[file.df$month == 0 ] = FALSE
file.df$month.name = NA
file.df$month.name[has.month] <- month.name[file.df$month[has.month]]
# find extension
last.dot <- sapply(file.df$path, function(x){
rev(gregexpr("\\.", x)[[1]])[1]
})
ext <- substr(file.df$path,
last.dot,
nchar(as.character(file.df$path)))
file.df$newpath <- paste0(library.folder,
"/",
file.df$year,
"/",
file.df$month, "_", file.df$month.name, "_", file.df$year) # add year to sub-folders
file.df$newpath.parent <- paste0(library.folder,
"/",
file.df$year)
file.df$newname <- paste0(file.df$year,
"_",
file.df$month,
"_",
file.df$day,
"-",
file.df$time,
ext)
# remove duplicate photos (taken at the exact same second from the same device
file.df.save <- file.df
file.df <- file.df[!duplicated(paste0(file.df$newname,
"-", file.df$device)),]
file.to.go <- file.df[,c("path","newpath","newname", "newpath.parent")]
# create all year and month directories
sapply(unique(file.to.go$newpath.parent), dir.create)
library.folder <- "/timothy/Dropbox/videolibrary"
# get data for exif available files ####
dat <- file.info(files)
file.df <- data.frame(path=files,
timestamp=dat$mtime,
device=dat$size)
file.df$date <- substr(file.df$timestamp,
1,
regexpr(" ", file.df$timestamp)-1)
file.df$time <- substr(file.df$timestamp,
regexpr(" ", file.df$timestamp)+1,
nchar(as.character(file.df$timestamp)))
file.df$time <- gsub(":", "\\.", file.df$time)
file.df$year <- substr(file.df$timestamp, 1, 4)
file.df$month <- as.numeric(as.character(substr(file.df$timestamp, 6, 7)))
file.df$day <- substr(file.df$timestamp, 9, 10)
has.month <- !is.na(file.df$month)
has.month[file.df$month == 0 ] = FALSE
file.df$month.name = NA
file.df$month.name[has.month] <- month.name[file.df$month[has.month]]
# find extension
last.dot <- sapply(file.df$path, function(x){
rev(gregexpr("\\.", x)[[1]])[1]
})
ext <- substr(file.df$path,
last.dot,
nchar(as.character(file.df$path)))
file.df$newpath <- paste0(library.folder,
"/",
file.df$year,
"/",
file.df$month, "_", file.df$month.name, "_", file.df$year) # add year to sub-folders
file.df$newpath.parent <- paste0(library.folder,
"/",
file.df$year)
file.df$newname <- paste0(file.df$year,
"_",
file.df$month,
"_",
file.df$day,
"-",
file.df$time,
ext)
# remove duplicate photos (taken at the exact same second from the same device
file.df.save <- file.df
file.df <- file.df[!duplicated(paste0(file.df$newname,
"-", file.df$device)),]
file.to.go <- file.df[,c("path","newpath","newname", "newpath.parent")]
# create directories and copy files ####
# create all year and month directories
sapply(unique(file.to.go$newpath.parent), dir.create)
sapply(unique(file.to.go$newpath), dir.create)
library.folder <- "./timothy/Dropbox/videolibrary"
# get data for exif available files ####
dat <- file.info(files)
file.df <- data.frame(path=files,
timestamp=dat$mtime,
device=dat$size)
file.df$date <- substr(file.df$timestamp,
1,
regexpr(" ", file.df$timestamp)-1)
file.df$time <- substr(file.df$timestamp,
regexpr(" ", file.df$timestamp)+1,
nchar(as.character(file.df$timestamp)))
file.df$time <- gsub(":", "\\.", file.df$time)
file.df$year <- substr(file.df$timestamp, 1, 4)
file.df$month <- as.numeric(as.character(substr(file.df$timestamp, 6, 7)))
file.df$day <- substr(file.df$timestamp, 9, 10)
has.month <- !is.na(file.df$month)
has.month[file.df$month == 0 ] = FALSE
file.df$month.name = NA
file.df$month.name[has.month] <- month.name[file.df$month[has.month]]
# find extension
last.dot <- sapply(file.df$path, function(x){
rev(gregexpr("\\.", x)[[1]])[1]
})
ext <- substr(file.df$path,
last.dot,
nchar(as.character(file.df$path)))
file.df$newpath <- paste0(library.folder,
"/",
file.df$year,
"/",
file.df$month, "_", file.df$month.name, "_", file.df$year) # add year to sub-folders
file.df$newpath.parent <- paste0(library.folder,
"/",
file.df$year)
file.df$newname <- paste0(file.df$year,
"_",
file.df$month,
"_",
file.df$day,
"-",
file.df$time,
ext)
# remove duplicate photos (taken at the exact same second from the same device
file.df.save <- file.df
file.df <- file.df[!duplicated(paste0(file.df$newname,
"-", file.df$device)),]
file.to.go <- file.df[,c("path","newpath","newname", "newpath.parent")]
# create directories and copy files ####
# create all year and month directories
sapply(unique(file.to.go$newpath.parent), dir.create)
sapply(unique(file.to.go$newpath), dir.create)
warnings()
library.folder <- "/Dropbox/videolibrary"
# get data for exif available files ####
dat <- file.info(files)
file.df <- data.frame(path=files,
timestamp=dat$mtime,
device=dat$size)
file.df$date <- substr(file.df$timestamp,
1,
regexpr(" ", file.df$timestamp)-1)
file.df$time <- substr(file.df$timestamp,
regexpr(" ", file.df$timestamp)+1,
nchar(as.character(file.df$timestamp)))
file.df$time <- gsub(":", "\\.", file.df$time)
file.df$year <- substr(file.df$timestamp, 1, 4)
file.df$month <- as.numeric(as.character(substr(file.df$timestamp, 6, 7)))
file.df$day <- substr(file.df$timestamp, 9, 10)
has.month <- !is.na(file.df$month)
has.month[file.df$month == 0 ] = FALSE
file.df$month.name = NA
file.df$month.name[has.month] <- month.name[file.df$month[has.month]]
# find extension
last.dot <- sapply(file.df$path, function(x){
rev(gregexpr("\\.", x)[[1]])[1]
})
ext <- substr(file.df$path,
last.dot,
nchar(as.character(file.df$path)))
file.df$newpath <- paste0(library.folder,
"/",
file.df$year,
"/",
file.df$month, "_", file.df$month.name, "_", file.df$year) # add year to sub-folders
file.df$newpath.parent <- paste0(library.folder,
"/",
file.df$year)
file.df$newname <- paste0(file.df$year,
"_",
file.df$month,
"_",
file.df$day,
"-",
file.df$time,
ext)
# remove duplicate photos (taken at the exact same second from the same device
file.df.save <- file.df
file.df <- file.df[!duplicated(paste0(file.df$newname,
"-", file.df$device)),]
file.to.go <- file.df[,c("path","newpath","newname", "newpath.parent")]
# create directories and copy files ####
# create all year and month directories
sapply(unique(file.to.go$newpath.parent), dir.create)
sapply(unique(file.to.go$newpath), dir.create)
library.folder <- "home/timothy/Dropbox/videolibrary"
# get data for exif available files ####
dat <- file.info(files)
file.df <- data.frame(path=files,
timestamp=dat$mtime,
device=dat$size)
file.df$date <- substr(file.df$timestamp,
1,
regexpr(" ", file.df$timestamp)-1)
file.df$time <- substr(file.df$timestamp,
regexpr(" ", file.df$timestamp)+1,
nchar(as.character(file.df$timestamp)))
file.df$time <- gsub(":", "\\.", file.df$time)
file.df$year <- substr(file.df$timestamp, 1, 4)
file.df$month <- as.numeric(as.character(substr(file.df$timestamp, 6, 7)))
file.df$day <- substr(file.df$timestamp, 9, 10)
has.month <- !is.na(file.df$month)
has.month[file.df$month == 0 ] = FALSE
file.df$month.name = NA
file.df$month.name[has.month] <- month.name[file.df$month[has.month]]
# find extension
last.dot <- sapply(file.df$path, function(x){
rev(gregexpr("\\.", x)[[1]])[1]
})
ext <- substr(file.df$path,
last.dot,
nchar(as.character(file.df$path)))
file.df$newpath <- paste0(library.folder,
"/",
file.df$year,
"/",
file.df$month, "_", file.df$month.name, "_", file.df$year) # add year to sub-folders
file.df$newpath.parent <- paste0(library.folder,
"/",
file.df$year)
file.df$newname <- paste0(file.df$year,
"_",
file.df$month,
"_",
file.df$day,
"-",
file.df$time,
ext)
# remove duplicate photos (taken at the exact same second from the same device
file.df.save <- file.df
file.df <- file.df[!duplicated(paste0(file.df$newname,
"-", file.df$device)),]
file.to.go <- file.df[,c("path","newpath","newname", "newpath.parent")]
# create directories and copy files ####
# create all year and month directories
sapply(unique(file.to.go$newpath.parent), dir.create)
sapply(unique(file.to.go$newpath), dir.create)
unique(file.to.go$newpath.parent)
library.folder <- "/home/timothy/Dropbox/videolibrary"
# get data for exif available files ####
dat <- file.info(files)
file.df <- data.frame(path=files,
timestamp=dat$mtime,
device=dat$size)
file.df$date <- substr(file.df$timestamp,
1,
regexpr(" ", file.df$timestamp)-1)
file.df$time <- substr(file.df$timestamp,
regexpr(" ", file.df$timestamp)+1,
nchar(as.character(file.df$timestamp)))
file.df$time <- gsub(":", "\\.", file.df$time)
file.df$year <- substr(file.df$timestamp, 1, 4)
file.df$month <- as.numeric(as.character(substr(file.df$timestamp, 6, 7)))
file.df$day <- substr(file.df$timestamp, 9, 10)
has.month <- !is.na(file.df$month)
has.month[file.df$month == 0 ] = FALSE
file.df$month.name = NA
file.df$month.name[has.month] <- month.name[file.df$month[has.month]]
# find extension
last.dot <- sapply(file.df$path, function(x){
rev(gregexpr("\\.", x)[[1]])[1]
})
ext <- substr(file.df$path,
last.dot,
nchar(as.character(file.df$path)))
file.df$newpath <- paste0(library.folder,
"/",
file.df$year,
"/",
file.df$month, "_", file.df$month.name, "_", file.df$year) # add year to sub-folders
file.df$newpath.parent <- paste0(library.folder,
"/",
file.df$year)
file.df$newname <- paste0(file.df$year,
"_",
file.df$month,
"_",
file.df$day,
"-",
file.df$time,
ext)
# remove duplicate photos (taken at the exact same second from the same device
file.df.save <- file.df
file.df <- file.df[!duplicated(paste0(file.df$newname,
"-", file.df$device)),]
file.to.go <- file.df[,c("path","newpath","newname", "newpath.parent")]
# create directories and copy files ####
# create all year and month directories
sapply(unique(file.to.go$newpath.parent), dir.create)
sapply(unique(file.to.go$newpath), dir.create)
write.csv(file.df, "video library full file.csv")
write.csv(file.df.save, "video library full file with dupes.csv")
write.csv(file.to.go, "video library files to save.csv")
?file.copy
paste0(as.character(file.to.go$newpath),
"/",
as.character(file.to.go$newname))
#file.to.go <- read.csv("video library files to save.csv")
file.copy(from = as.character(file.to.go$path),
to = paste0(as.character(file.to.go$newpath),
"/",
as.character(file.to.go$newname)),
overwrite = TRUE,
recursive = FALSE,
copy.mode = TRUE, copy.date = TRUE)
library(mgcv)
?gam
rm(list=ls())
library(readxl)
setwd("/home/timothy/Dropbox/Tim/CV/collabNetwork")
myName = "Timothy L. Staples"
# cycle through wos subfolder to import 500 paper blocks
wosFiles <- list.files(path="./wos", include.dirs=TRUE)
coAuthPapers <- do.call("rbind", lapply(1:length(wosFiles), function(n){
temp <- as.data.frame(read_excel(paste0("./wos/", wosFiles[n])),
stringAsFactors=FALSE)
authorList <- strsplit(temp$`Author Full Names`, "; ")
do.call("rbind", lapply(1:length(authorList), function(n1){
data.frame(auth = authorList[[n1]],
pID = ((n-1)*500) + n1)
}))
}))
coAuthPapers$surname <- substr(coAuthPapers$auth,
1, regexpr(", ", coAuthPapers$auth)-1)
coAuthPapers$first <- substr(coAuthPapers$auth,
regexpr(", ", coAuthPapers$auth)+2,
nchar(as.character(coAuthPapers$auth)))
coAuthPapers$full <- paste0(coAuthPapers$first, " ", coAuthPapers$surname)
# now make a co-author table
authors <- sort(unique(coAuthPapers$full))
coAuthMatSave <- coAuthMat
coAuthMat <- do.call("rbind",
tapply(coAuthPapers$full,
coAuthPapers$pID,
function(x){expand.grid(x, x)}, simplify=FALSE))
coAuthMat <- table(coAuthMat$Var1, coAuthMat$Var2)
sort(coAuthMat["Claire E. Wainwright",], decreasing=TRUE)
# coAuthMat <- matrix(0, nrow = length(authors) , ncol = length(authors),
#                     dimnames=list(authors, authors))
#
#
# for(name in authors){
# print(name)
#   # get authored papers
#   subPapers <- coAuthPapers[coAuthPapers$full == name,]
#   subPapers <- coAuthPapers[coAuthPapers$pID %in% subPapers$pID,]
#
#   coTable <- table(subPapers$full)
#
#   coAuthMat[cbind(which(rownames(coAuthMat) == name),
#                   match(names(coTable), colnames(coAuthMat)))] = coTable
#
# }
mycoAuth <- colnames(coAuthMat[,coAuthMat[myName,] > 0])
mycoAuthMat <- coAuthMat[mycoAuth, ]
mycoAuthMat <- mycoAuthMat[, colSums(mycoAuthMat > 0) > 1]
aTab <- data.frame(source = rep(rownames(mycoAuthMat), ncol(mycoAuthMat)),
target = rep(colnames(mycoAuthMat), each=nrow(mycoAuthMat)),
count=as.vector(mycoAuthMat), stringsAsFactors = FALSE)
aTab <- aTab[aTab$source != aTab$target,]
aTab <- aTab[aTab$count > 0,]
aTab$primary <- ifelse(aTab$target %in% mycoAuth &
(aTab$source == myName | aTab$target == myName),
"#324158",
"#8C96A6")
aTab$width <- ifelse(aTab$target %in% mycoAuth &
(aTab$source == myName | aTab$target == myName), 2, 0.5)
countWithMe <- sapply(split(aTab, f=aTab$target), function(x){
sum(x$count[x$source == myName])
})
V(network)$label = V(network)$name
# convert table into graph
library(igraph)
network=graph_from_data_frame(d=aTab, directed=F)
V(network)$count = countWithMe[match(V(network)$name, names(countWithMe))]
V(network)$count <- ifelse(V(network)$count == 0, 5, 5*V(network)$count)
V(network)$count[V(network)$name == myName] = 15
V(network)$primary = "#8C96A6"
V(network)$primary[V(network)$name %in% mycoAuth] = "#324158"
V(network)$primary[V(network)$name == myName] = "white"
V(network)$label = V(network)$name
V(network)$label[!V(network)$name %in% mycoAuth]=""
V(network)$width = 0
V(network)$width[V(network)$name == myName] = 5
V(network)$strokeCol = "#324158"
# Transform it in a JSON format for d3.js
library(d3r)
data_json <- d3_igraph(network)
# Save this file
write(data_json, "/home/timothy/Dropbox/Tim/CV/collabNetwork/data.json")
V(network)$url = "www.google.com"
V(network)$width = 0
V(network)$width[V(network)$name == myName] = 5
V(network)$strokeCol = "#324158"
# Transform it in a JSON format for d3.js
library(d3r)
data_json <- d3_igraph(network)
# Save this file
write(data_json, "/home/timothy/Dropbox/Tim/CV/collabNetwork/data.json")
V(network)$url = "http://google.com"
V(network)$width = 0
V(network)$width[V(network)$name == myName] = 5
V(network)$strokeCol = "#324158"
# Transform it in a JSON format for d3.js
library(d3r)
data_json <- d3_igraph(network)
# Save this file
write(data_json, "/home/timothy/Dropbox/Tim/CV/collabNetwork/data.json")
V(network)$url[V(network)$name == "John M. Dwyer"] = "https://jdwyer2.wordpress.com/team/"
V(network)$width = 0
V(network)$width[V(network)$name == myName] = 5
V(network)$strokeCol = "#324158"
# Transform it in a JSON format for d3.js
library(d3r)
data_json <- d3_igraph(network)
# Save this file
write(data_json, "/home/timothy/Dropbox/Tim/CV/collabNetwork/data.json")
V(network)$offlabel = V(network)$name
V(network)$offlabel = V(network)$name
V(network)$offlabel[V(network)$name %in% mycoAuth]=""
V(network)$offlabel = V(network)$name
V(network)$offlabel[V(network)$name %in% mycoAuth]=""
V(network)$url[V(network)$name == "John M. Dwyer"] = "https://jdwyer2.wordpress.com/team/"
V(network)$width = 0
V(network)$width[V(network)$name == myName] = 5
V(network)$strokeCol = "#324158"
# Transform it in a JSON format for d3.js
library(d3r)
data_json <- d3_igraph(network)
# Save this file
write(data_json, "/home/timothy/Dropbox/Tim/CV/collabNetwork/data.json")
V(network)$url
network=graph_from_data_frame(d=aTab, directed=F)
V(network)$count = countWithMe[match(V(network)$name, names(countWithMe))]
V(network)$count <- ifelse(V(network)$count == 0, 5, 5*V(network)$count)
V(network)$count[V(network)$name == myName] = 15
V(network)$primary = "#8C96A6"
V(network)$primary[V(network)$name %in% mycoAuth] = "#324158"
V(network)$primary[V(network)$name == myName] = "white"
V(network)$label = V(network)$name
V(network)$label[!V(network)$name %in% mycoAuth]=""
V(network)$offlabel = V(network)$name
V(network)$offlabel[V(network)$name %in% mycoAuth]=""
V(network)$url[V(network)$name == "John M. Dwyer"] = "https://jdwyer2.wordpress.com/team/"
V(network)$url
V(network)$hasurl <- !is.na(V(network)$url)
V(network)$offlabel = V(network)$name
V(network)$offlabel[V(network)$name %in% mycoAuth]=""
V(network)$url[V(network)$name == "John M. Dwyer"] = "https://jdwyer2.wordpress.com/team/"
V(network)$hasurl <- !is.na(V(network)$url)
V(network)$width = 0
V(network)$width[V(network)$name == myName] = 5
V(network)$strokeCol = "#324158"
# Transform it in a JSON format for d3.js
library(d3r)
data_json <- d3_igraph(network)
# Save this file
write(data_json, "/home/timothy/Dropbox/Tim/CV/collabNetwork/data.json")
